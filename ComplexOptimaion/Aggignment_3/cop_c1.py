# -*- coding: utf-8 -*-
"""COP_C1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1onORD91e9VY20kRgUP8zTR5gV7mQ925G

Fibonachi Search Method
"""

def fibonachi(n):
  if n<2:
    return 1
  else:
    return fibonachi(n-1) + fibonachi(n-2)

def fun(x, y):
  return x*x - 4*x + y*y - y -x*y

xi = 2.5
xj = 3.5
yi = 1.5
yj = 2.5
k = 15

x1 = xi + (xj-xi)*fibonachi(k-2)/fibonachi(k)
x2 = xj - (xj-xi)*fibonachi(k-2)/fibonachi(k)
y1 = yi + (yj-yi)*fibonachi(k-2)/fibonachi(k)
y2 = yj - (yj-yi)*fibonachi(k-2)/fibonachi(k)

def fib_ser_y(a, x1, x2, b, y):
  # print("y = ",y , "  a= ", a ," x1= ", x1 ," x2= ", x2 ," b= ", b)
  # print(fun(y, a), fun(y, x1), fun(y, x2), fun(y, b))
  if x2-x1 < 0.0001:
    return (x2+x1)/2
  elif fun(y, x1) < fun(y, x2):
    z = x2-x1
    return fib_ser_y(a, a+z, x1, x2, y)
  elif fun(y, x1) >= fun(y, x2):
    z = x2-x1
    return fib_ser_y(x1, x2, b-z, b, y)

def two_variable_fib(xi, x1, x2, xj):
  if x2-x1 < 0.00001:
    xx = (x2+x1)/2
    print( "x = ", xx, " y = ", fib_ser_y(yi, y1, y2, yj, xx))
    print( "F(x,y) min = ", fun(xx, fib_ser_y(yi, y1, y2, yj, xx)))
    return
  elif fib_ser_y(yi, y1, y2, yj, x1) < fib_ser_y(yi, y1, y2, yj, x2):
    z = x2-x1
    return two_variable_fib(xi, xi+z, x1, x2)
  elif fib_ser_y(yi, y1, y2, yj, x1) >= fib_ser_y(yi, y1, y2, yj, x2):
    z = x2-x1
    return two_variable_fib(x1, x2, xj-z, xj)

two_variable_fib(xi, x1, x2, xj)

